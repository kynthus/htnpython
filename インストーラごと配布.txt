とはいっても、何パターンかある
※コマンド化とは異なり「setup.py」を作る必要アリ


1.	bdist_eggで配布(★正直もう古い。wheelとpipを使えと)
	「setup.py」の「bdist_egg」タスクを実行
	出来上がった「egg」ファイルを
	「easy_install <eggファイル>」でインストール完了
	アンインストール時は「easy-install -mxN <パッケージ名>」後に、
	ファイルやフォルダ一式を削除する。
	※パッケージ名はsetup.pyに書いてあるはず

2.	bdist_wheelで配布
	「bdist_wheel」で作成、「pip install <whlファイル>」
	※ちなみにPyPIもこの方式

3.	bdist_wininstで配布
	「bdist_wininst」で作成、出来上がった.exeを起動すれば良い

4.	bdist_msiの手順
	pip install cx_Freeze
	python setup.py bdist_msi(ただし、setup.pyを適切に設定すること)

★.whlはプラットフォームが違うとダメなようだ
★さらにPyPIはきちんとv2,v3系で作成しないといけない
  もう2020年でサポート終わるから、2系は切りたいとこだ……



～ 結局何が一番いいの？ ～

・PyPIに.whlをアップロードするのが一番お手軽
  -> でもインターネット接続が必要なのと、全世界にダダ漏れ

・第2に、社内へNexus建ててそこへPyPIリポジトリ作成
  -> プラットフォームの違いを意識せずとも良い。ただ、社外とのやり取りには弱い

・社外には.whlを提供してpipで入れてもらう
  ただし直接指定の場合、プラットフォーム互換性が無いので注意
  ※wheel自体をpip installして、Invalidate Caches/Restartを忘れずに！
    Windowsならbdist_wininstやmsiでインストーラを提供できる(msiは3.8から)

・実行ファイルを提供したい場合は、pyinstallerを使えばよい
  Pythonの無い環境でも実行できる！
  ただし、.tar.gzや.zipなどで固める作業は手動で必要
  あと動かしたいプラットフォーム上で作らないとダメ(LinuxならLinux上で作成)

・さいごに、IntelliJ側で「Make Universal Wheel」にチェックを入れておくように
  でないとv2,v3両方とも使えるようにならない
  ※この場合は2系で開発しとくと良い
